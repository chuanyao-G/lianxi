<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<link rel="stylesheet" href="dahuiji.css" />
	<script>
	window.onload = function(){
		new Engine();
	}
	//创建引擎
	function Engine(){
		//实例属性
		this.ele = document.getElementById("body_main"); //获取到引擎
		this.init();
	}
	//原型方法
	Engine.prototype.init = function(){
		//获取所有的li选项
		var olis = this.ele.children[0].children;
		var that = this;
		//遍历添加点击事件
		for(var i = 0,len = olis.length;i < len;i ++){
			//记录当前下标
			olis[i].index = i;
			olis[i].onclick = function(){
				this.parentNode.remove(); //删除节点
				that.loadPage();
				that.frequency = this.index; //记录游戏难度
			}
		}
	}
	Engine.prototype.loadPage = function(){
		var that = this;
		//创建logo
		var logo = createEle('div','logo');
		//添加 logo
		appendBody(logo);
		//创建loading
		var loading = createEle('div','loading');
		//添加loading
		appendBody(loading);
		var index = 1;
		//loading动画
		var loadingTimer = setInterval(function(){
			loading.style.background = 'url(images/loading' + (index ++ % 3 + 1) + '.png) no-repeat'
		},500)
		//页面背景动画
		var positionY = 1;
		setInterval(function(){
			that.ele.style.backgroundPositionY = positionY ++ + 'px';
		},50)
		//清场
		setTimeout(function(){
			logo.remove();
			loading.remove();
			clearInterval(loadingTimer);
			that.gameStart();
		},3000)
	}
	Engine.prototype.gameStart = function(){
		//我方飞机登场
		Plane.init();
		//我方飞机开火
		Plane.fire(this.frequency)
		//创建敌机
		this.createEnemy();
	}
	Engine.prototype.createEnemy = function(){
		//敌机产生的概率
		//小飞机
		setInterval(function(){
			Math.random() > 0.5 ? new Enemy(1) : '';
		},300)
		//中飞机
		setInterval(function(){
			Math.random() > 0.5 ? new Enemy(2) : '';
		},500)
		//大飞机
		setInterval(function(){
			Math.random() > 0.2 ? new Enemy(3) : '';
		},8000)
	}
	//我方飞机
	var Plane = {
		//创建飞机
		ele : createEle('div','my-warplain'),
		init : function(){
			//添加到页面
			appendBody(this.ele);
			//定位我方飞机
			this.ele.style.left = document.documentElement.clientWidth / 2 - this.ele.offsetWidth / 2 + 'px';
			this.ele.style.top = document.documentElement.clientHeight - this.ele.offsetHeight + 'px';
			this.fly();
		},
		fly : function(){
			var that = this; //记录this
			//获取引擎
			var bodyMain = document.getElementById("body_main");
			document.onmousemove = function(evt){
				var e = evt || window.event;
				var left = e.pageX - that.ele.offsetWidth / 2;
				if(left <= bodyMain.offsetLeft){
					left = bodyMain.offsetLeft;
				}else if(left >= bodyMain.offsetLeft + bodyMain.offsetWidth - that.ele.offsetWidth){
					left = bodyMain.offsetLeft + bodyMain.offsetWidth - that.ele.offsetWidth;
				}
				that.ele.style.left = left + 'px';
				that.ele.style.top = e.pageY - that.ele.offsetHeight / 2 + 'px';
			}
		},
		fire : function(frequency){
			var that = this;
			var defaultFrequency = 200;
			//设置开火频率
			switch(frequency){
				case 0 : defaultFrequency = 500; break;
				case 1 : defaultFrequency = 400;break;
				case 2 : defaultFrequency = 200;break;
				case 3 : defaultFrequency = 50;break;
			}
			var id = 1; //设置子弹编号
			setInterval(function(){
				that.bullet.push(new Bullet(id)); //创建子弹并加入数组
				id ++;
				console.log(that.bullet);
			},defaultFrequency)
		},
		bullet : []
	}
	
	//创建子弹
	function Bullet(id){
		this.id = id;
		this.ele = createEle('div','bullet');
		this.init();
	}
	Bullet.prototype.init = function(){
		//给子弹刻录编号
		this.ele.id = this.id;
		//放到页面中
		appendBody(this.ele);
		//定位子弹
		this.ele.style.left = Plane.ele.offsetLeft + Plane.ele.offsetWidth / 2 - this.ele.offsetWidth /2 + 'px';
		this.ele.style.top = Plane.ele.offsetTop - this.ele.offsetHeight + 'px';
		this.fly();
	}
	Bullet.prototype.fly = function(){
		var that = this;
		this.timer = setInterval(function(){
			that.ele.style.top = that.ele.offsetTop - 15 + 'px';
			if(that.ele.offsetTop <= 10){
				that.boom(); //调用爆炸方法
			}
		},30)
	}
	Bullet.prototype.boom = function(){
		var that = this;
		this.ele.className = 'bullet_die';
		clearInterval(this.timer);
		
		setTimeout(function(){
			that.ele.remove();
			//遍历数组
			for(var i = 0,len = Plane.bullet.length;i < len;i ++){
				if(that.ele.id == Plane.bullet[i].id){
					Plane.bullet.splice(i,1);
				}
			}
			
		},100)
		
	}
	
	//敌机
	function Enemy(type){
		this.type = type;
		this.init();
	}
	Enemy.prototype.init = function(){
		switch(this.type){
			case 1 : this.ele = createEle('div','enemy-small');this.hp = 1;this.speed = 10;break;
			case 2 : this.ele = createEle('div','enemy-middle');this.hp = 10;this.speed = 8;break;
			case 3 : this.ele = createEle('div','enemy-large');this.hp = 50;this.speed = 2;break;
		}
		appendBody(this.ele);
		//定位敌机
		this.position();
	}
	Enemy.prototype.position = function(){
		//获取引擎
		var bodyMain = document.getElementById("body_main");
		this.ele.style.left = randomInt(bodyMain.offsetLeft,bodyMain.offsetLeft + bodyMain.offsetWidth - this.ele.offsetWidth) + 'px';
		this.ele.style.top =  - this.ele.offsetHeight + 'px';
		//起飞
		this.fly();
	}
	Enemy.prototype.fly = function(){
		var that = this;
		this.timer = setInterval(function(){
			that.ele.style.top = that.ele.offsetTop + that.speed + 'px';
			//碰撞检测
			that.collision();
			if(that.ele.offsetTop >= document.documentElement.clientHeight){
				clearInterval(that.timer);
				that.ele.remove();
			}
		},80)
	}
	Enemy.prototype.collision = function(){
		for(var i = 0;i < Plane.bullet.length;i ++){
			if(!(this.ele.offsetLeft + this.ele.offsetWidth < Plane.bullet[i].ele.offsetLeft  ||  Plane.bullet[i].ele.offsetLeft + Plane.bullet[i].ele.offsetWidth < this.ele.offsetLeft)){
				if(!(this.ele.offsetTop + this.ele.offsetHeight < Plane.bullet[i].ele.offsetTop || Plane.bullet[i].ele.offsetTop + Plane.bullet[i].ele.offsetHeight < this.ele.offsetTop)){
					this.hp --;
					if(this.hp === 0){
						this.ele.remove();
						clearInterval(this.timer);
					}
					Plane.bullet[i].boom();
				}
			}
		}
	}
	//工具
	Element.prototype.remove = function(){
		this.parentNode.removeChild(this);
	}
	//创建节点
	function createEle(tagName,className){
		var ele = document.createElement(tagName);
		ele.className = className;
		return ele;
	}
	//添加节点
	function appendBody(ele){
		document.body.appendChild(ele);
	}
	//随机整数
	function randomInt(min,max){
		return Math.floor(Math.random() * (max - min + 1) + min);
	}
	</script>

</head>
<body>
	<div id="body_main" class="main">
			<ul id="options" class="options">
				<li value="1">超级困难</li>
				<li value="2">非常困难</li>
				<li value="3">比较困难</li>
				<li value="4">就选我吧</li>
			</ul>
	</div>
</body>
</html>